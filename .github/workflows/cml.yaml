name: model-training

on: [push]

jobs:
  deploy-cloud-runner:
    runs-on: [ubuntu-latest]
    container:  docker://davidgortega/cml-runner2:latest

    steps:
      - name: deploy
        shell: bash
        env:
          repo_token: ${{ secrets.REPO_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS_DATA: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          echo "Deploying..."
          echo "$(pwd)"
          echo "$(ls)"

          MACHINE="cml-$(openssl rand -hex 4)"
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}' > gce-credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS='gce-credentials.json'

          RUNNER_LABELS="cml"
          RUNNER_REPO="https://github.com/${GITHUB_REPOSITORY}"

          docker-machine create --driver google \
            --google-machine-type "n1-standard-4" \
            --google-project "$PROJECT_ID" \
            $MACHINE

          eval "$(docker-machine env --shell sh $MACHINE)"
          (
          docker-machine ssh $MACHINE "sudo mkdir -p /docker_machine && sudo chmod 777 /docker_machine" && \
          docker-machine scp -r -q ~/.docker/machine/ $MACHINE:/docker_machine && \
          docker run --name runner -d \
            -v /docker_machine/machine:/root/.docker/machine \
            -e RUNNER_IDLE_TIMEOUT=120 \
            -e DOCKER_MACHINE=$MACHINE \
            -e RUNNER_LABELS=$RUNNER_LABELS \
            -e repo_token=$repo_token \
            -e RUNNER_REPO=https://github.com/KUrushi/example_cml \
            dvcorg/cml-gpu-py3-cloud-runner:latest && \
          sleep 20 && echo "Deployed $MACHINE"
          ) || (echo y | docker-machine rm $MACHINE && exit 1)

  train:
    needs: deploy-cloud-runner
    runs-on: [self-hosted, cml]

    steps:
      - uses: actions/checkout@v2
      - name: cml_run
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "testing..."
          echo "$(pwd)"
          echo "$(ls)"
          pip install -r requirements.txt
          python train.py

          cat metrics.txt >> report.md
          cml-publish confusion_matrix.png --md >> report.md
          cml-send-comment report.md